{"version":3,"sources":["pages/HomePage.jsx","pages/entities/PricesArray.jsx","pages/entities/ManifuctresArray.jsx","pages/entities/CreateEntity.jsx","pages/delivery/DeliveryPage.jsx","pages/entities/AddPopUp.jsx","pages/entities/Entity.jsx","pages/entities/Entities.jsx","components/Login.jsx","pages/LoginPage.jsx","pages/CurrentUser.jsx","pages/delivery/Search.jsx","pages/delivery/delivery.jsx","pages/delivery/DeliveriesPage.jsx","pages/delivery/Entity.jsx","pages/delivery/SearchDelivey.jsx","pages/delivery/Deliveries.jsx","routes.js","components/Master.jsx","serviceWorker.js","store/userStore.js","store/entitiesStore.js","index.js"],"names":["HomePage","inject","observer","react_default","a","createElement","Card","className","React","Component","PricesArray","entityType","this","props","entitiesStore","getItems","_this2","entities","class","map","item","name","TextField_default","type","value","values","onChange","e","changeEntity","target","ManifuctresArray","Checkbox_default","checked","indexOf","CreateEntity","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initializerDefineProperty","_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","togglePopUp","setArchive","setState","state","entity","objectSpread","isArchive","saveEntity","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","editEntity","createItem","entityName","stop","getTitle","entitiesFields","prices","types","title","fields","ChangeCheckBox","entities_PricesArray","arrayChange","entities_ManifuctresArray","manArrayChange","floatingLabelText","Save_default","onClick","CancelTwoTone_default","action","_this3","defineProperty","_this4","key","_this5","_this6","concat","filter","i","DeliveryPage","DeliveryPage_descriptor","DeliveryPage_descriptor2","DeliveryPage_descriptor3","DeliveryPage_descriptor4","_descriptor5","_descriptor6","res","count","alert","_id","editDelivery","sent","createDelivery","length","error","t0","err","window","confirm","setEntity","number","price","liter","date","Date","getFullYear","padNumber","getMonth","getDate","userStore","user","FormControl_default","InputLabel_default","htmlFor","Select_default","inputProps","id","MenuItem_default","manufacturer","toDateString","changeDateEntity","onInput","milkman","keys","driver","truck","cerDel","cerSell","Link","to","observable","split","forEach","element","manufacturers","isClose","AddPopUp","getPopUp","showPopUp","delivery_DeliveryPage","entities_CreateEntity","Fab_default","color","aria-label","Add_default","Entity","getItemText","getItemDecimalText","deleteEntity","getItemArrayText","EditTwoTone_default","DeleteTwoTone_default","EntitesPage","match","params","setEntityType","entities_AddPopUp","reverse","entities_Entity","Redirect","LoginForm","_ref","onSubmit","errors","summary","errorText","username","password","RaisedButton_default","label","primary","LoginPage","processForm","event","preventDefault","login","changeUser","field","Login","CurrentUser","subtitle","es_Redirect","SearchBar","search","searchDeliveries","grouping","fromDate","InputLabelProps","shrink","toDate","Search_default","getFirstDayOfTheMonth","getLasttDayOfTheMonth","Delivery","getColumnsArray","sumColumns","arr","DeliveriesPage","getSums","deliveriseSum","searchObj","delivery_Search","getTitles","deliveries","delivery","shtraosDeliveries","SearchDelivery","searchDeliveriesEntities","sort","b","undefined","Deliveries","Math","round","delivery_Entity","deleteDelivery","SearchDelivey","getTable","routes","childRoutes","path","component","DeliverisesPage","Entities","Master","NavLink","getLinks","Boolean","location","hostname","store","axios","post","then","setUser","catch","setError","data","message","response","stack","names","delete","result","runInAction","push","get","parseFloat","items","totalAmout","totalLiter","sumPrice","ReactDom","render","MuiThemeProvider_default","muiTheme","getMuiTheme","BrowserRouter","index_module","components_Master","route","console","log","Route","assign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48352e60.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'material-ui/Card';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n@inject(\"userStore\")\r\n@observer\r\nclass HomePage extends React.Component {\r\n\r\n  render() {\r\n      return (<Card className=\"container\">\r\n      </Card>)\r\n  }\r\n}\r\nexport default HomePage;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass PricesArray extends React.Component {\r\n      entityType = \"entityType\" \r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(this.entityType);\r\n  }\r\n  render() { \r\n      if (this.props.entitiesStore.entities[this.entityType]){\r\n       return (<div class=\"prices\">    <h4>מחירים</h4> <div className=\"pricesTable\">\r\n       {this.props.entitiesStore.entities[this.entityType] .map((item)=>{\r\n              return <div className=\"row\"><span> {item.name} - </span><TextField className=\"priceInput\"\r\n              type=\"number\" name={item.name}   \r\n              value={this.props.values[item.name]}\r\n               onChange={(e)=>{this.props.changeEntity(item.name , e.target.value)}} />\r\n              \r\n              </div>\r\n          })} </div>\r\n       </div> );\r\n      }\r\n      else{\r\n        return (<div>loading</div>)\r\n      }\r\n    }\r\n}\r\n\r\nexport default PricesArray;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass ManifuctresArray extends React.Component {\r\n      entityType = \"entityType\" \r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(this.entityType);\r\n  }\r\n  render() { \r\n      if (this.props.entitiesStore.entities[this.entityType]){\r\n       return (<div class=\"prices\">    <h4>באיזה מסכים להציגו?</h4> <div className=\"pricesTable\">\r\n       {this.props.entitiesStore.entities[this.entityType] .map((item)=>{\r\n              return <div className=\"row\"><span> {item.name} - </span><Checkbox \r\n              className=\"checkbox\"\r\n              name={item.name}   \r\n              checked={this.props.values.indexOf(item.name) >-1}\r\n              onChange={(e)=>{ this.props.changeEntity(item.name , e.target.checked)}} />\r\n              \r\n              </div>\r\n          })} </div>\r\n       </div> );\r\n      }\r\n      else{\r\n        return (<div>loading</div>)\r\n      }\r\n    }\r\n}\r\n\r\nexport default ManifuctresArray;","import React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport { observer, inject, propTypes } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelTwoToneIcon from '@material-ui/icons/CancelTwoTone';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PricesArray from './PricesArray';\r\nimport ManifuctresArray from './ManifuctresArray';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n@inject(\"entitiesStore\")\r\n@observer\r\nclass CreateEntity extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      entity: props.entity || { prices: {}, types: [] }\r\n    };\r\n  }\r\n  componentWillReceiveProps(e) {\r\n    this.setState({ entity: e.entity || { prices: {}, types: [] } })\r\n  }\r\n  @action changeEntity = (e) => {\r\n    this.setState({ entity: { ...this.state.entity, [e.target.name]: e.target.value } });\r\n    this.state.entity[e.target.name] = e.target.value;\r\n  }\r\n\r\n  @action ChangeCheckBox = (e) => {\r\n    this.setState({ entity: { ...this.state.entity, [e.target.name]: !this.state.entity[e.target.name] } });\r\n  }\r\n  @action arrayChange = (key, value) => {\r\n    // this.state.entity.prices[key]=value;\r\n    this.setState({ entity: { ...this.state.entity, prices: { ...this.state.entity.prices, [key]: value } } });\r\n  }\r\n\r\n  @action manArrayChange = (key, value) => {\r\n    if (!value) {\r\n      this.setState({ entity: { ...this.state.entity, types: this.state.entity.types.filter((i) => i !== key) } });\r\n    }\r\n    else if (this.state.entity.types.indexOf(key) < 0) {\r\n      this.setState({ entity: { ...this.state.entity, types: this.state.entity.types.concat(key) } });\r\n    }\r\n  }\r\n  togglePopUp = () => {\r\n    this.props.togglePopUp();\r\n  }\r\n  setArchive = () => {\r\n    this.setState(state => ({ entity: { ...state.entity, isArchive: !state.entity.isArchive } }))\r\n  }\r\n  saveEntity = async () => {\r\n    if (this.props.entity) {\r\n      await this.props.entitiesStore.editEntity(this.state.entity);\r\n    }\r\n    else {\r\n      await this.props.entitiesStore.createItem(this.state.entity, this.props.entityName);\r\n    }\r\n    this.props.togglePopUp();\r\n  }\r\n  getTitle = () => {\r\n    if (this.props.entity) {\r\n      return \"ערוך \" + this.props.entitiesStore.entitiesFields[this.props.entityName].name;\r\n    }\r\n    else return this.props.entitiesStore.entitiesFields[this.props.entityName].name + \" חדש \";\r\n  }\r\n\r\n  render() {\r\n    return (<Card className=\"popUp\">\r\n      <CardTitle title={this.getTitle()} />\r\n      {this.props.entitiesStore.entitiesFields[this.props.entityName].fields.map((item) => {\r\n        if (item === \"isClose\") {\r\n          return (<div class=\"row\"><span>האם הוא קרוב? </span>\r\n            <Checkbox name={item} onChange={this.ChangeCheckBox} className=\"checkbox\" checked={this.state.entity[item]} value=\"האם הוא קרוב\" />\r\n          </div>)\r\n        }\r\n        else if (item === \"arrPrices\") {\r\n          return (<PricesArray name=\"item\" changeEntity={this.arrayChange} values={this.state.entity.prices || {}} />)\r\n        }\r\n        else if (item === \"types\") {\r\n          return (<ManifuctresArray name=\"item\" changeEntity={this.manArrayChange} values={this.state.entity.types || []} />)\r\n        }\r\n        else if (item === \"isArchive\") {\r\n          return (<div class=\"row\"><span>פעיל </span>\r\n            <Checkbox name=\"isArchive\" onChange={this.ChangeCheckBox} className=\"checkbox\" checked={!this.state.entity.isArchive} value=\"האם הוא פעיל\" />\r\n          </div>)\r\n        }\r\n        else {\r\n          return (<div className=\"row\">  <TextField\r\n            floatingLabelText={item} type=\"text\" name={item}\r\n            value={this.state.entity[item] || \"\"} onChange={this.changeEntity} /></div>)\r\n        }\r\n      })}\r\n      <div className=\"row\">\r\n        <SaveIcon className=\"buttons\" onClick={this.saveEntity} />\r\n        <CancelTwoToneIcon title=\"cancel\" className=\"buttons\" onClick={this.togglePopUp} />\r\n      </div>\r\n    </Card>)\r\n  } \r\n}\r\n\r\nexport default CreateEntity;","import React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelTwoToneIcon from '@material-ui/icons/CancelTwoTone';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n@inject(\"entitiesStore\")\r\n@inject(\"userStore\")\r\n@observer\r\nclass DeliveryPage extends React.Component {\r\n\r\n  @observable entity = { entityType: \"חלב\", date: new Date() , liter:1 };\r\n  @observable error = \"\";\r\n  padNumber(number) {\r\n    return number > 9 ? number : \"0\" + number;\r\n  }\r\n\r\n  @action changeDateEntity = (e) => {\r\n    const values = e.target.value.split(\"-\");\r\n    this.entity[e.target.name] = new Date(values[0], values[1] - 1, values[2]);\r\n\r\n  }\r\n\r\n  @action changeEntity = (e) => {\r\n    this.entity[e.target.name] = e.target.value;\r\n    if (e.target.name === \"milkman\" || e.target.name === \"entityType\") {\r\n      this.props.entitiesStore.entities.milkman.forEach(element => {\r\n        if (element.name === e.target.value)\r\n          this.entity.price = element.prices[this.entity.entityType];\r\n      });\r\n    }\r\n    if (e.target.name === \"manufacturer\") {\r\n      this.props.entitiesStore.entities.manufacturers.forEach(element => {\r\n        if (element.name === e.target.value)\r\n          this.entity.isClose = element.isClose;\r\n      });\r\n    }\r\n  }\r\n\r\n  @action ChangeCheckBox = (e) => {\r\n    this.entity[e.target.name] = !this.entity[e.target.name];\r\n  }\r\n  @action arrayChange = (key, value) => {\r\n    // this.entity.prices[key]=value;\r\n    this.entity.prices = { ...this.entity.prices, [key]: value };\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(\"entityType\");\r\n    this.props.entitiesStore.getItems(\"driver\");\r\n    this.props.entitiesStore.getItems(\"truck\");\r\n    this.props.entitiesStore.getItems(\"manufacturers\");\r\n    this.props.entitiesStore.getItems(\"milkman\");\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setEntity(props.entity)\r\n\r\n  }\r\n  setEntity(entity) {\r\n    if (entity) {\r\n      this.entity = { ...entity}\r\n      this.entity.price = this.entity.price ? this.entity.price[\"$numberDecimal\"] : 1;\r\n      this.entity.liter = this.entity.liter ? this.entity.liter[\"$numberDecimal\"] : 1;\r\n      this.entity.count = this.entity.count ? this.entity.count[\"$numberDecimal\"] : 1;\r\n    }\r\n    else {\r\n      this.entity = { entityType: \"חלב\", date: new Date() , liter:1}\r\n    }\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setEntity(props.entity)\r\n  }\r\n  saveEntity = async () => {\r\n    try {\r\n      let res;\r\n      if (!this.entity.count) {\r\n        alert(\"בבקשה הכנס כמות.\")\r\n      }\r\n      else {\r\n        if (this.props.entity || this.entity._id) {\r\n          res = await this.props.entitiesStore.editDelivery(this.entity);\r\n        }\r\n        else {\r\n          res = await this.props.entitiesStore.createDelivery(this.entity, this.props.entityName);\r\n        }\r\n        if (res && res.length > 0) {\r\n          this.error = res;\r\n        }\r\n        else {\r\n          this.props.togglePopUp();\r\n        }\r\n      }\r\n    }\r\n    catch (err) {\r\n      if (err.err){\r\n        if (window.confirm(err.err)){\r\n          this.setEntity( err.value[0]);\r\n        }\r\n      }\r\n      else{\r\n        alert(err);\r\n      }\r\n    }\r\n  }\r\n  togglePopUp = () => {\r\n    this.props.togglePopUp();\r\n  }\r\n\r\n  toDateString(date) {\r\n    if (!date.getFullYear) {\r\n      date = new Date(date);\r\n    }\r\n    if (date.getFullYear)\r\n      return date.getFullYear() + \"-\" + this.padNumber(date.getMonth() + 1) + \"-\" + this.padNumber(date.getDate());\r\n    else {\r\n      return date;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.userStore.user) {\r\n      return (<Card className=\"popUp\">\r\n        <CardTitle title=\"משלוח חדש\" />\r\n        <div className=\"row\">\r\n          <FormControl>\r\n            <span className=\"error\">{this.error}</span>\r\n            <InputLabel htmlFor=\"entityType\">מוצר</InputLabel>\r\n            <Select className=\"select\"\r\n              value={this.entity.entityType}\r\n              onChange={this.changeEntity}\r\n              inputProps={{\r\n                name: 'entityType',\r\n                id: 'entityType',\r\n              }} >\r\n              {this.props.entitiesStore.entities[\"entityType\"] ? this.props.entitiesStore.entities[\"entityType\"].map(item => <MenuItem value={item.name}><em>{item.name}</em></MenuItem>) : null}\r\n            </Select>\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl >\r\n            <InputLabel htmlFor=\"manufacturer\">יצרן</InputLabel>\r\n            <Select className=\"select\"\r\n              value={this.entity.manufacturer}\r\n              onChange={this.changeEntity}\r\n              inputProps={{\r\n                name: 'manufacturer',\r\n                id: 'manufacturer',\r\n              }} >\r\n              {this.props.entitiesStore.entities[\"manufacturers\"] ? this.props.entitiesStore.entities[\"manufacturers\"].map(item => {\r\n                if (item.types.indexOf(this.entity.entityType) >= 0)\r\n                  return (<MenuItem value={item.name}><em>{item.name}</em></MenuItem>)\r\n              }) : null}\r\n            </Select>\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"liter\">ליטר</InputLabel>\r\n            <TextField id=\"liter\" className=\"input\"\r\n              floatingLabelText=\"ליטר\" type=\"number\" name=\"liter\"\r\n              value={this.entity.liter} onChange={this.changeEntity} />\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"count\">כמות</InputLabel>\r\n            <TextField id=\"count\" className=\"input\"\r\n              floatingLabelText=\"כמות\" type=\"number\" name=\"count\"\r\n              value={this.entity.count} onChange={this.changeEntity} />\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n            <TextField className=\"input\"\r\n              type=\"date\" name=\"date\"\r\n              value={this.toDateString(this.entity.date)} onChange={this.changeDateEntity} onInput={this.changeDateEntity} />\r\n          </FormControl>\r\n\r\n        </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"milkman\">מחלבה</InputLabel>\r\n            <Select className=\"select\"\r\n              value={this.entity.milkman}\r\n              onChange={this.changeEntity}\r\n              inputProps={{\r\n                name: 'milkman',\r\n                id: 'milkman',\r\n              }} >\r\n              {this.props.entitiesStore.entities[\"milkman\"] ? this.props.entitiesStore.entities[\"milkman\"].map(item => {\r\n                if (Object.keys(item.prices).indexOf(this.entity.entityType) >= 0)\r\n                  return (<MenuItem value={item.name}><em>{item.name}</em></MenuItem>)\r\n              }) : null\r\n              }\r\n            </Select>\r\n          </FormControl>  </div><div className=\"row\">\r\n\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"price\">מחיר</InputLabel>\r\n            <TextField id=\"price\" className=\"input\"\r\n              type=\"text\" name=\"price\"\r\n              value={this.entity.price} onChange={this.changeEntity} />\r\n          </FormControl>  </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"driver\">נהג</InputLabel>\r\n            <Select className=\"select\"\r\n              value={this.entity.driver}\r\n              onChange={this.changeEntity}\r\n              inputProps={{\r\n                name: 'driver',\r\n                id: 'driver',\r\n              }} >\r\n              {this.props.entitiesStore.entities[\"driver\"] ? this.props.entitiesStore.entities[\"driver\"].filter(i=>!i.isArchive).map(item => <MenuItem value={item.name}><em>{item.name}</em></MenuItem>) : null}\r\n            </Select>\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"truck\">משאית</InputLabel>\r\n            <Select className=\"select\"\r\n              value={this.entity.truck}\r\n              onChange={this.changeEntity}\r\n              inputProps={{\r\n                name: 'truck',\r\n                id: 'truck',\r\n              }} >\r\n              {this.props.entitiesStore.entities[\"truck\"] ? this.props.entitiesStore.entities[\"truck\"].filter(i=>!i.isArchive).map(item => <MenuItem value={item.number}><em>{item.number}</em></MenuItem>) : null}\r\n            </Select>\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"cerDel\">תעודת משלוח</InputLabel>\r\n            <TextField id=\"cerDel\" className=\"input\"\r\n              type=\"text\" name=\"cerDel\"\r\n              value={this.entity.cerDel} onChange={this.changeEntity} />\r\n          </FormControl>\r\n        </div><div className=\"row\">\r\n\r\n          <FormControl className=\"row\">\r\n            <InputLabel htmlFor=\"cerSell\">תעודת מכירה </InputLabel>\r\n            <TextField id=\"cerSell\" className=\"input\"\r\n              type=\"text\" name=\"cerSell\"\r\n              value={this.entity.cerSell} onChange={this.changeEntity} />\r\n          </FormControl>\r\n\r\n        </div>\r\n        <div className=\"row\">\r\n          <SaveIcon className=\"buttons\" onClick={this.saveEntity} />\r\n          <CancelTwoToneIcon className=\"buttons\" onClick={this.togglePopUp} />\r\n        </div>\r\n      </Card>)\r\n    } else {\r\n      return (<Link to=\"/login\">Log in</Link>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default DeliveryPage;","import React  from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {observer} from 'mobx-react';\r\nimport {observable , action } from 'mobx';\r\nimport CreateEntity from './CreateEntity';\r\nimport DeliveryPage from '../delivery/DeliveryPage';\r\n\r\n@observer\r\nclass AddPopUp extends React.Component {\r\n    @observable showPopUp = false;\r\n    @action togglePopUp=()=>{debugger;\r\n        this.showPopUp = !this.showPopUp; \r\n    }\r\n    getPopUp=()=>{\r\n      if (this.props.entity ||this.showPopUp )\r\n        {\r\n          if (this.props.entityName === \"delivery\"){\r\n              return (<DeliveryPage entity={this.props.entity} togglePopUp={this.props.entity?this.props.togglePopUp : this.togglePopUp} />)\r\n          }\r\n          else return  ( <CreateEntity entity={this.props.entity} togglePopUp={this.props.entity?this.props.togglePopUp : this.togglePopUp} entityName={this.props.entityName}></CreateEntity> );\r\n        }\r\n    }\r\n  render() {\r\n       return (<div className=\"popUpContainer\">  <Fab color=\"primary\" aria-label=\"Add\" >\r\n       <AddIcon onClick={this.togglePopUp} />\r\n       {this.getPopUp()}\r\n     </Fab>\r\n     </div> )\r\n  }\r\n}\r\n\r\nexport default AddPopUp;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport EditTwoTone from '@material-ui/icons/EditTwoTone';\r\nimport DeleteToneIcon from '@material-ui/icons/DeleteTwoTone';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass Entity extends React.Component {\r\n        \r\n  getItemText = (value)=>{\r\n    return (<div className=\"column\">{Object.keys(value).map((key)=>{\r\n      return <div className=\"column1\"> {value[key]} - {key}</div>\r\n    })}</div>);\r\n  }\r\n      \r\n  getItemDecimalText = (value,key)=>{ \r\n    if (key === \"date\"){\r\n      return new Date(value).toDateString();\r\n    }\r\n    return (value[\"$numberDecimal\"]?value[\"$numberDecimal\"]:value);\r\n  }\r\n\r\n  editEntity = ()=>{\r\n    this.props.editEntity(this.props.item);\r\n  }\r\n  \r\n  deleteEntity = ()=>{\r\n    this.props.deleteEntity ? this.props.deleteEntity(this.props.item) : this.props.entitiesStore.deleteEntity(this.props.item);\r\n  }\r\n  \r\n  getItemArrayText = (value)=>{\r\n    return  value.map((key)=>{\r\n      return <div className=\"column1\"> {key}</div>\r\n\r\n    })\r\n  }\r\n  render() {\r\n     \r\n         return (<div className=\"row\">\r\n         <div className=\"column buttons\">\r\n          <EditTwoTone  className=\"buttons\" onClick={this.editEntity}/>\r\n          <DeleteToneIcon  className=\"buttons\" onClick={this.deleteEntity}/>\r\n         </div>\r\n         {Object.keys(this.props.item).map((key)=>{\r\n           if (key[0] != \"_\" && key!=\"prices\" && key != \"types\")\r\n             return <div className={key + \" column\"}>{key===\"isClose\" ?(this.props.item[key]?\"קרוב\": \"רחוק\"): this.getItemDecimalText(this.props.item[key] , key)}</div>\r\n         })}\r\n         {this.props.item.prices?  this.getItemText(this.props.item[\"prices\"]) : null}\r\n         {this.props.item.types?  this.getItemArrayText(this.props.item[\"types\"]) : null}\r\n         </div>) \r\n       \r\n  }\r\n}\r\n\r\nexport default Entity;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\nimport AddPopUp from './AddPopUp';\r\nimport Entity from './Entity';\r\nimport {observable} from \"mobx\"\r\n@inject(\"userStore\") \r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass EntitesPage extends React.Component {\r\n       @observable entity=null;\r\n  componentWillReceiveProps(e) {\r\n    this.props.entitiesStore.getItems(e.match.params.name);\r\n    this.props.entitiesStore.setEntityType(e.match.params.name);\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(this.props.match.params.name);\r\n    this.props.entitiesStore.setEntityType(this.props.match.params.name);\r\n  }\r\n  getItemText = (value)=>{\r\n    return Object.keys(value).map((key)=>{\r\n      return <div className=\"column1\"> {value[key]} - {key}</div>\r\n\r\n    })\r\n  }\r\n  editEntity=(entity)=>{\r\n    this.entity = entity;\r\n  }\r\n  render() {\r\n    if (this.props.userStore.user){\r\n      if (this.props.entitiesStore.entities[this.props.entitiesStore.entityType]){\r\n       return (<div class=\"container\">\r\n    <h2 className=\"title\" >{this.props.entitiesStore.entitiesFields[this.props.entitiesStore.entityType].name+ \" חדש \"} </h2>\r\n        <AddPopUp togglePopUp={this.editEntity} entityName={this.props.entitiesStore.entityType} entity={this.entity}></AddPopUp> <div className=\"table\">\r\n       {this.props.entitiesStore.entities[this.props.entitiesStore.entityType].reverse().map((item)=>{\r\n        \r\n         return (<Entity item={item} editEntity={this.editEntity}/>)\r\n       })}\r\n       </div></div>)\r\n      }\r\n      else{\r\n        return (<div>loading</div>)\r\n      }\r\n    }\r\n    else{\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default EntitesPage;","import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardText } from 'material-ui/Card';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n\r\nconst LoginForm = ({\r\n  onSubmit,\r\n  onChange,\r\n  errors,\r\n  user\r\n}) => (\r\n  <Card className=\"container\">\r\n    <form action=\"/\" onSubmit={onSubmit}>\r\n      <h2 className=\"card-heading\">Login</h2>\r\n\r\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\r\n\r\n      <div className=\"field-line\">\r\n        <TextField\r\n          floatingLabelText=\"User Name\"\r\n          name=\"username\"\r\n          errorText={errors.username}\r\n          onChange={onChange}\r\n          value={user.username}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"field-line\">\r\n        <TextField\r\n          floatingLabelText=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={onChange}\r\n          errorText={errors.password}\r\n          value={user.password}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"button-line\">\r\n        <RaisedButton type=\"submit\" label=\"Log in\" primary />\r\n      </div>\r\n\r\n    </form>\r\n  </Card>\r\n);\r\n\r\n\r\nexport default LoginForm;","import React  from 'react';\r\nimport LoginForm from '../components/Login.jsx';\r\nimport axios from 'axios';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\n@inject(\"userStore\") \r\n@observer\r\nclass LoginPage extends React.Component {\r\n   \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      user: {\r\n        username: '',\r\n        password: ''\r\n      }\r\n    };\r\n  }\r\n \r\n   processForm = (event)=> {\r\n    event.preventDefault();\r\n    this.props.userStore.login(this.state.user);\r\n  }\r\n  \r\n  changeUser=(event) =>{\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({user\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render the component.\r\n   */\r\n  render() {\r\n       if (!this.props.userStore.user){\r\n\r\n    return (\r\n      <LoginForm\r\n        onSubmit={this.processForm}\r\n        onChange={this.changeUser}\r\n        errors={this.props.userStore.errors}\r\n        user={this.state.user}\r\n      />\r\n    );\r\n       }\r\n       else{\r\n                 return <Redirect to=\"/profile\"/>;\r\n       }\r\n  }\r\n\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject} from 'mobx-react';\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n@inject(\"userStore\") \r\n@observer\r\nclass CurrentUser extends React.Component {\r\n\r\n  render() { \r\n    if(this.props.userStore.user) {\r\n      return  (<Card className=\"container\">\r\n    <CardTitle title=\"גולן\" subtitle={\" שלום \" + this.props.userStore.user.username} />\r\n      </Card>) \r\n    }\r\n    else{\r\n      return (<Redirect to=\"/login\"></Redirect>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default CurrentUser;","\r\nimport React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass SearchBar extends React.Component {\r\n \r\n  getFirstDayOfTheMonth(){\r\n    var date = new Date();\r\nreturn new Date(date.getFullYear(), date.getMonth(), 1);}\r\n\r\ngetLasttDayOfTheMonth(){\r\n  var date = new Date();\r\nreturn new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n  @observable entity = {fromDate:this.getFirstDayOfTheMonth(),\r\n     toDate:this.getLasttDayOfTheMonth()\r\n    ,grouping:\"milkman\" , entityType:\"חלב\" };\r\n   \r\n    \r\n   \r\n    @action changeEntity=(e)=>{\r\n      this.entity[e.target.name] = e.target.value;\r\n      \r\n    } \r\n    @action changeDateEntity=(e)=>{\r\n      const values = e.target.value.split(\"-\");\r\n      this.entity[e.target.name] = new Date( values[0] , values[1] -1,values[2]);\r\n      \r\n    }\r\n\r\n  search = ()=>{\r\n    this.props.entitiesStore.searchDeliveries(this.entity);\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(\"entityType\"); \r\n  } \r\n  padNumber(number){\r\n    return number>9 ? number : \"0\"+number;\r\n  }\r\n  toDateString(date){\r\n    return date.getFullYear() + \"-\" + this.padNumber(date.getMonth() + 1) + \"-\"+this.padNumber(date.getDate());\r\n  }\r\n  render() {  \r\n        return  (<Card className=\"popUp\">\r\n    <CardTitle title=\"דוחות\"/>\r\n    <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"age-simple\">מוצר</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.entityType}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'entityType',\r\n              id: 'age-simple',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"entityType\"] ? this.props.entitiesStore.entities[\"entityType\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl >\r\n          <InputLabel htmlFor=\"mani-simple\">דוח עבור</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.grouping}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'grouping',\r\n              id: 'mani-simple',\r\n            }} > \r\n                {/* <MenuItem value=\"_id\"><em>הצג את כל ההעברות</em></MenuItem>  */}\r\n                <MenuItem value=\"milkman\"><em>חלבנים</em></MenuItem> \r\n                <MenuItem value=\"manufacturer\"><em>יצרנים</em></MenuItem> \r\n          </Select>\r\n        </FormControl>\r\n        </div> <div className=\"row\"> \r\n        <span htmlFor=\"mani-simple\">מתאריך</span>\r\n          <FormControl className=\"row\">\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"fromDate\"   \r\n             value={this.toDateString(this.entity.fromDate)} onChange={this.changeDateEntity} />\r\n        </FormControl>\r\n </div><div className=\"row\"> \r\n          <span htmlFor=\"toDate\">עד תאריך</span>\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"toDate\"   InputLabelProps={{\r\n              shrink: true,\r\n            }}  label=\"עד תאריך\" \r\n            value={this.toDateString(this.entity.toDate)} onChange={this.changeDateEntity} />\r\n </div> \r\n        <div className=\"row\"> \r\n         <SearchIcon className=\"buttons\" onClick={this.search} />\r\n         </div>\r\n      </Card>)  \r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport EditTwoTone from '@material-ui/icons/EditTwoTone';\r\nimport DeleteToneIcon from '@material-ui/icons/DeleteTwoTone';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass Delivery extends React.Component {\r\n        \r\n  getItemText = (key)=>{if (this.props.item[key])\r\n    return (this.props.item[key][\"$numberDecimal\"]?this.props.item[key][\"$numberDecimal\"]:this.props.item[key]);\r\n  }\r\n\r\n  editEntity = ()=>{\r\n    this.props.editEntity(this.props.item);\r\n  }\r\n  \r\n  deleteEntity = ()=>{\r\n    this.props.entitiesStore.deleteEntity(this.props.item);\r\n  }\r\n  getColumnsArray=()=>{\r\n    return this.props.entitiesStore.sumColumns[this.props.grouping]; \r\n  }\r\n   \r\n  render() {\r\n     const arr = this.getColumnsArray();\r\n         return (<div className=\"row\">\r\n\r\n         {this.props.grouping === \"_id\" ? <div className=\"column buttons\">\r\n          <EditTwoTone  className=\"buttons\" onClick={this.editEntity}/>\r\n          <DeleteToneIcon  className=\"buttons\" onClick={this.deleteEntity}/>\r\n         </div>:<div className=\"column\">-</div>}\r\n         <div className=\"name column\"> {this.props.item[\"_id\"][this.props.grouping]}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[0])}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[1])}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[2])}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[3])}</div>\r\n         </div>) \r\n       \r\n  }\r\n}\r\n\r\nexport default Delivery;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\nimport {observable} from \"mobx\"\r\nimport DeliveryPage from './DeliveryPage';\r\nimport SearchBar from './Search';\r\nimport Delivery from './delivery';\r\n@inject(\"userStore\") \r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass DeliveriesPage extends React.Component {\r\n       @observable entity=null; \r\n  \r\n  editEntity=(entity)=>{\r\n    this.entity = entity;\r\n  }\r\n  getTitles(){\r\n    if(this.props.entitiesStore.searchObj.grouping === \"manufacturer\"){\r\nreturn ( <div className=\"row\"> <div className=\"column\">-</div> <div className=\"column\">-</div>\r\n<div className=\"column\">יצור חלב</div>\r\n<div className=\"column\">שטראוס</div>\r\n<div className=\"column\">שטראוס רחוקים</div></div>)\r\n    }\r\n    else{\r\n      return ( <div className=\"row\"> <div className=\"column\">-</div> <div className=\"column\">-</div>\r\n      <div className=\"column\">מחיר ליחידה</div>\r\n      <div className=\"column\">סהכ כמות</div>\r\n      <div className=\"column\">סהכ ליטר</div>\r\n      <div className=\"column\">סהכ מחיר</div></div>)\r\n    }\r\n  }\r\n\r\n  getSums = ()=>{ \r\n      return ( <div className=\"row\"> <div className=\"column\">-</div> <div className=\"column\">-</div> \r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[0]}</div>\r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[1]}</div>\r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[2]}</div>\r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[3] ? this.props.entitiesStore.deliveriseSum[3] + \"ש\\\"ח\" : \"-\"}</div> </div>)\r\n  }\r\n  render() {\r\n    if (this.props.userStore.user){ \r\n       return (<div class=\"container\">\r\n        {this.entity ? <DeliveryPage togglePopUp={this.editEntity} entityName={this.props.entitiesStore.entityType} entity={this.entity}></DeliveryPage>:null}\r\n         <SearchBar></SearchBar>\r\n         <div className=\"table\">\r\n        {this.getTitles()}\r\n       {this.props.entitiesStore.deliveries?this.props.entitiesStore.deliveries.map((item)=>{\r\n         return (<Delivery grouping={this.props.entitiesStore.searchObj.grouping} key={item._id} item={item} editEntity={this.editEntity}/>)\r\n       }) : <div>Loading</div>}\r\n       {<div className=\"row\">סך הכל</div>}\r\n       {this.props.entitiesStore.deliveries?this.getSums() : null}\r\n       {this.props.entitiesStore.shtraosDeliveries?<div className=\"row\">שטראוס</div>:null}\r\n       \r\n       {this.props.entitiesStore.shtraosDeliveries?this.props.entitiesStore.shtraosDeliveries.map((item)=>{\r\n         return (<Delivery grouping={this.props.entitiesStore.searchObj.grouping} key={item._id} item={item} editEntity={this.editEntity}/>)\r\n       }) : null}\r\n       </div></div>)\r\n    }\r\n    else{\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DeliveriesPage;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport EditTwoTone from '@material-ui/icons/EditTwoTone';\r\nimport DeleteToneIcon from '@material-ui/icons/DeleteTwoTone';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass Entity extends React.Component {\r\n        \r\n  getItemText = (value)=>{\r\n    return (<div className=\"column\">{Object.keys(value).map((key)=>{\r\n      return <div className=\"column1\"> {value[key]} - {key}</div>\r\n    })}</div>);\r\n  }\r\n      \r\n  getItemDecimalText = (value,key)=>{ \r\n    if (value){\r\n    if (key === \"date\"){\r\n      return new Date(value).toDateString();\r\n    }\r\n    return (value[\"$numberDecimal\"]?value[\"$numberDecimal\"]:value);\r\n  }\r\n  else{\r\n    return \"-\"\r\n  }\r\n  }\r\n\r\n  editEntity = ()=>{\r\n    this.props.editEntity(this.props.item);\r\n  }\r\n  \r\n  deleteEntity = ()=>{\r\n    this.props.deleteEntity ? this.props.deleteEntity(this.props.item) : this.props.entitiesStore.deleteEntity(this.props.item);\r\n  }\r\n  \r\n  getItemArrayText = (value)=>{\r\n    return  value.map((key)=>{\r\n      return <div className=\"column1\"> {key}</div>\r\n\r\n    })\r\n  }\r\n  render() {\r\n     \r\n         return (<tr className=\"row\">\r\n         <td className=\"column buttons\">\r\n          <EditTwoTone  className=\"buttons\" onClick={this.editEntity}/>\r\n          <DeleteToneIcon  className=\"buttons\" onClick={this.deleteEntity}/>\r\n         </td>\r\n         <td className={\"entityType\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"entityType\"] , \"entityType\")}</td>\r\n         <td className={\"manufacturer\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"manufacturer\"] , \"manufacturer\")}</td>\r\n         <td className={\"liter\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"liter\"] , \"liter\")}</td>\r\n         <td className={\"count\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"count\"] , \"count\")}</td>\r\n         <td className={\"date\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"date\"] , \"date\")}</td>\r\n         <td className={\"milkman\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"milkman\"] , \"milkman\")}</td>\r\n         <td className={\"price\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"price\"] , \"price\")}</td>\r\n         <td className={\"driver\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"driver\"] , \"driver\")}</td>\r\n         <td className={\"truck\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"truck\"] , \"truck\")}</td>\r\n         <td className={\"cerDel\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"cerDel\"] , \"cerDel\")}</td>\r\n         <td className={\"cerSell\" + \" column\"}>{this.getItemDecimalText(this.props.item[\"cerSell\"] , \"cerSell\")}</td>\r\n         </tr>) \r\n       \r\n  }\r\n}\r\n\r\nexport default Entity;","\r\nimport React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass SearchDelivery extends React.Component {\r\n \r\n  getFirstDayOfTheMonth(){\r\n    var date = new Date();\r\nreturn new Date(date.getFullYear(), date.getMonth(), 1);}\r\n\r\ngetLasttDayOfTheMonth(){\r\n  var date = new Date();\r\nreturn new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n  @observable entity = {fromDate:this.getFirstDayOfTheMonth(),\r\n     toDate:this.getLasttDayOfTheMonth()\r\n    ,milkman:undefined , entityType:undefined };\r\n   \r\n    \r\n   \r\n    @action changeEntity=(e)=>{\r\n      this.entity[e.target.name] = e.target.value;\r\n      \r\n    } \r\n    @action changeDateEntity=(e)=>{\r\n      const values = e.target.value.split(\"-\");\r\n      this.entity[e.target.name] = new Date( values[0] , values[1] -1,values[2]);\r\n    }\r\n\r\n  search = ()=>{\r\n    this.props.entitiesStore.searchDeliveriesEntities(this.entity);\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(\"entityType\"); \r\n    this.props.entitiesStore.getItems(\"milkman\"); \r\n    this.props.entitiesStore.getItems(\"truck\"); \r\n    this.props.entitiesStore.getItems(\"driver\"); \r\n    this.props.entitiesStore.getItems(\"manufacturers\"); \r\n  } \r\n  padNumber(number){\r\n    return number>9 ? number : \"0\"+number;\r\n  }\r\n  toDateString(date){\r\n    return date.getFullYear() + \"-\" + this.padNumber(date.getMonth() + 1) + \"-\"+this.padNumber(date.getDate());\r\n  }\r\n  render() {  \r\n        return  (<Card className=\"popUp\">\r\n    <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"age-simple\">מוצר</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.entityType}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'entityType',\r\n              id: 'age-simple',\r\n            }} > \r\n                <MenuItem  ><em>-</em></MenuItem> \r\n            {this.props.entitiesStore.entities[\"entityType\"] ? this.props.entitiesStore.entities[\"entityType\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl >\r\n          <InputLabel htmlFor=\"mani-simple\">חלבן</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.milkman}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'milkman',\r\n              id: 'mani-simple',\r\n            }} > \r\n                <MenuItem  ><em>-</em></MenuItem> \r\n            {this.props.entitiesStore.entities[\"milkman\"] ? this.props.entitiesStore.entities[\"milkman\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div>\r\n        \r\n        <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"age-simple\">יצרן</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.manufacturer}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'manufacturer',\r\n              id: 'manufacturer',\r\n            }} > \r\n                <MenuItem  ><em>-</em></MenuItem> \r\n            {this.props.entitiesStore.entities[\"manufacturers\"] ? this.props.entitiesStore.entities[\"manufacturers\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div>\r\n        \r\n        <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"age-simple\">נהג</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.driver}\r\n            onChange={this.changeEntity}\r\n            \r\n              name='driver'\r\n              id= 'driver'\r\n             >\r\n                <MenuItem  ><em>-</em></MenuItem> \r\n            {this.props.entitiesStore.entities[\"driver\"] ? this.props.entitiesStore.entities[\"driver\"].sort((a,b)=>( a.isArchive?1:0)-(b.isArchive?1:0)).map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n             </Select>  \r\n        </FormControl>\r\n        </div> \r\n        <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"age-simple\">משאית</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.truck}\r\n            onChange={this.changeEntity}\r\n              name= 'truck'\r\n              id='truck'\r\n             >\r\n                <MenuItem  ><em>-</em></MenuItem> \r\n            {this.props.entitiesStore.entities[\"truck\"] ? this.props.entitiesStore.entities[\"truck\"].sort((a,b)=>( a.isArchive?1:0)-( b.isArchive?1:0)) .map(item=>  <MenuItem value={item.number}><em>{item.number}</em></MenuItem>): null}\r\n             </Select>  \r\n        </FormControl>\r\n        </div>  \r\n        \r\n         <div className=\"row\"> \r\n        <span htmlFor=\"mani-simple\">מתאריך</span>\r\n          <FormControl className=\"row\">\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"fromDate\"   \r\n             value={this.toDateString(this.entity.fromDate)} onChange={this.changeDateEntity} />\r\n        </FormControl>\r\n </div><div className=\"row\"> \r\n          <span htmlFor=\"toDate\">עד תאריך</span>\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"toDate\"   InputLabelProps={{\r\n              shrink: true,\r\n            }}  label=\"עד תאריך\" \r\n            value={this.toDateString(this.entity.toDate)} onChange={this.changeDateEntity} />\r\n </div> \r\n        <div className=\"row\"> \r\n         <SearchIcon className=\"buttons\" onClick={this.search} />\r\n         </div>\r\n      </Card>)  \r\n  }\r\n}\r\n\r\nexport default SearchDelivery;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\nimport AddPopUp from '../entities/AddPopUp';\r\nimport Entity from './Entity';\r\nimport {observable} from \"mobx\"\r\nimport SearchDelivery from './SearchDelivey';\r\n@inject(\"userStore\") \r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass Deliveries extends React.Component {\r\n       @observable entity=null;\r\n  \r\n  editEntity=(entity)=>{\r\n    this.entity = entity;\r\n  }\r\n\r\n  getSums = ()=>{ \r\n   if (this.props.entitiesStore.deliveriseSum){\r\n      return ( <div className=\"row\">  <div>-</div>\r\n    <div className=\"column\"> סהכ כמות  {this.props.entitiesStore.deliveriseSum[0]}</div>\r\n    <div className=\"column\"> סהכ ליטרים  {this.props.entitiesStore.deliveriseSum[1]} </div>\r\n    <div>-</div>\r\n    <div className=\"column\">{ Math.round(this.props.entitiesStore.deliveriseSum[2]*100)/100   + \" ש\\\"ח\" }</div> </div>)\r\n}\r\nelse{\r\n  return null;\r\n}\r\n  }\r\n  getTable() {\r\n    if (this.props.userStore.user){\r\n      if (this.props.entitiesStore.entities[\"delivery\"]){\r\n       return (<div>\r\n    <h2 className=\"title\" >{this.props.entitiesStore.entitiesFields[\"delivery\"].name+ \" חדש \"} </h2>\r\n        <AddPopUp togglePopUp={this.editEntity} entityName={\"delivery\"} entity={this.entity}></AddPopUp>\r\n         <div className=\"table\">\r\n       {this.getSums()}\r\n        </div>\r\n         <table className=\"table\">\r\n       {this.props.entitiesStore.entities[\"delivery\"].reverse().map((item)=>{\r\n        \r\n         return (<Entity item={item} editEntity={this.editEntity} deleteEntity={this.props.entitiesStore.deleteDelivery}/>)\r\n       })}\r\n       </table></div>)\r\n      }\r\n      else{\r\n        return (<div>\r\n           <h2 className=\"title\" >{this.props.entitiesStore.entitiesFields[\"delivery\"].name+ \" חדש \"} </h2>\r\n        <AddPopUp togglePopUp={this.editEntity} entityName={\"delivery\"} entity={this.entity}></AddPopUp>\r\n          loading\r\n          </div>)\r\n      }\r\n    }\r\n    else{\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (<div class=\"container\">\r\n      <SearchDelivery></SearchDelivery>\r\n      {this.getTable()}\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default Deliveries;","import HomePage from './pages/HomePage.jsx';\r\nimport Entities from './pages/entities/Entities';\r\nimport LoginPage from './pages/LoginPage.jsx';\r\nimport CurrentUser from './pages/CurrentUser.jsx';\r\n// import Registration from './pages/RegistrationPage.jsx';\r\nimport DeliveryPage from './pages/delivery/DeliveryPage.jsx';\r\nimport DeliverisesPage from './pages/delivery/DeliveriesPage';\r\nimport Deliveries from './pages/delivery/Deliveries.jsx';\r\n\r\n\r\nconst routes = {\r\n  // base component (wrapper for the whole application).\r\n  childRoutes: [\r\n\r\n    {\r\n      path: '/',\r\n      component: HomePage\r\n    },\r\n\r\n    {\r\n      path: '/login',\r\n      component: LoginPage\r\n    },\r\n\r\n    // {\r\n    //   path: '/registration',\r\n    //   component: Registration\r\n    // },\r\n\r\n    {\r\n      path : '/profile',\r\n      component: CurrentUser\r\n      },\r\n      {\r\n      path : '/delivery',\r\n      component: DeliveryPage\r\n      },\r\n      {\r\n      path : '/deliveries',\r\n      component: DeliverisesPage\r\n      },\r\n\r\n      {\r\n        path : '/entity/delivery',\r\n        component: Deliveries\r\n        },\r\n    {\r\n    path : '/entities/:name',\r\n    component: Entities\r\n    }\r\n  ]\r\n};\r\n\r\nexport default routes;","import React from 'react';\r\nimport {  Link , NavLink} from 'react-router-dom';\r\n\r\nimport {observer, inject} from 'mobx-react';\r\n\r\n\r\n@inject(\"userStore\") \r\n@observer\r\nclass Master  extends React.Component{\r\n\r\n  getLinks(){\r\n    if(this.props.userStore.user) {\r\n      return(<div>\r\n        <Link to=\"/deliveries\" className=\"delivery\">משלוחים</Link>\r\n        <Link to=\"/entity/delivery\" className=\"delivery\">הוסף משלוח</Link>\r\n        <Link to=\"/entities/driver\">נהגים</Link>\r\n      <Link to=\"/entities/truck\">משאיות</Link>\r\n      <Link to=\"/entities/milkman\">חלבנים</Link>\r\n      <Link to=\"/entities/manufacturers\">יצרנים</Link>\r\n      <Link to=\"/entities/entityType\">מוצרים</Link> </div>\r\n      );\r\n    } else{\r\n      return (<Link to=\"/login\">Log in</Link>)\r\n    }\r\n\r\n  }\r\n\r\n  render ( )   {\r\n  return <div>\r\n    <div className=\"top-bar\">\r\n      <div className=\"top-bar-left\">\r\n        <NavLink to=\"/profile\">Golan App</NavLink>\r\n      </div>\r\n\r\n      <div className=\"top-bar-right\"> \r\n      {this.getLinks()}\r\n      </div>\r\n\r\n    </div>\r\n \r\n\r\n  </div>\r\n};\r\n}\r\n \r\n\r\nexport default Master;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { observable, computed, action, decorate } from \"mobx\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass userStore {\r\n    @observable user = null;\r\n    @observable errors = {};\r\n\r\n    login = (user) => {\r\n        axios.post('/auth/login', user)\r\n            .then(this.setUser).catch(this.setError);\r\n    }\r\n    @action setUser = (res)=> {\r\n        this.errors = {};\r\n        this.user = res.data;\r\n    }\r\n\r\n    @action setError = (err) => {\r\n        this.errors = { message: err.response ? err.response.data.message : err.data, stack: err.stack };\r\n    }\r\n\r\n}\r\n\r\nconst store = new userStore();\r\nexport default store;","import { observable, runInAction, action, computed } from \"mobx\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass entitiesStore {\r\n    @observable entities = {};\r\n    @observable deliveries = null;\r\n    @observable errors = {};\r\n    @observable searchObj = {};\r\n    entitiesFields = {\r\n        driver: { name: \"נהג\", names: \"נהגים\", fields: [\"name\", \"number\", \"isArchive\"] },\r\n        truck: { name: \"משאית\", names: \"משאיות\", fields: [\"number\" , \"isArchive\"] },\r\n        milkman: { name: \"חלבן\", names: \"חלבנים\", fields: [\"name\", \"arrPrices\"] },\r\n        entityType: { name: \"מוצר\", names: \"מוצרים\", fields: [\"name\"] },\r\n        manufacturers: { name: \"יצרן\", names: \"יצרנים\", fields: [\"name\", \"isClose\", \"types\"] },\r\n        delivery: {\r\n            name: \"משלוח\", names: \"משלוחים\", fields: [\"cerDel\", \"cerSell\", \"count\",\r\n                \"date\", \"driver\", \"entityType\", \"liter\", \"manufacturer\", \"isClose\", \"milkman\", \"price\", \"truck\", \"_id\"]\r\n        }\r\n    }\r\n    @observable deliveriseSum = {};\r\n    @observable shtraosDeliveries = [];\r\n    @observable entityType = \"\";\r\n    sumColumns = {\r\n        manufacturer: [\"totalAmout\", \"shtrue\", \"shfalse\"],\r\n        milkman: [\"price\", \"totalAmout\", \"totalLiter\", \"sumPrice\"]\r\n    };\r\n\r\n    deleteEntity = (entity) => {\r\n        if(window.confirm(\"Are you sure you want to delete \" + (entity.name || entity.number  ) + \"?\")){\r\n        axios.delete('/api/' + this.entityType + \"/\" + entity._id)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[this.entityType] = this.entities[this.entityType].filter((item) => item._id != entity._id)\r\n                })\r\n            }).catch(this.setError);\r\n        }\r\n    }\r\n\r\n    deleteDelivery = (entity) => {\r\n        if(window.confirm(\"Are you sure you want to delete \" +  entity.cerDel + \"?\")){\r\n            axios.delete('/api/delivery/' + entity._id)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[\"delivery\"] = this.entities[\"delivery\"].filter((item) => item._id != entity._id)\r\n                })\r\n            }).catch(this.setError);\r\n        }\r\n    }\r\n\r\n    editDelivery = (entity) => {\r\n        axios.post(\"/delivery/\" + entity._id, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    if (this.entities && this.entities[\"delivery\"]){\r\n                    this.entities[\"delivery\"] = this.entities[\"delivery\"]\r\n                        .map((item) => item._id === entity._id ? result.data : item);\r\n                    }\r\n                })\r\n            }) \r\n    }\r\n    createDelivery = (entity) => {\r\n\r\n        return axios.post(\"/delivery/\", entity)\r\n            .then((result) => {\r\n                this.entities[\"delivery\"].push(result.data)\r\n                return null;\r\n            }) \r\n            .catch((err)=>{\r\n                throw(err.response.data);\r\n            })\r\n    }\r\n    editEntity = (entity) => {\r\n        axios.post('/api/' + this.entityType + \"/\" + entity._id, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[this.entityType] = this.entities[this.entityType]\r\n                        .map((item) => item._id === entity._id ? result.data : item);\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n    getItems = (entityName) => {\r\n\r\n        axios.get('/api/' + entityName)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[entityName] = result.data;\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n\r\n    searchDeliveriesEntities=(entity)=>{\r\n        axios.post(\"/delivery/get\" , entity)\r\n        .then((result) => {\r\n            runInAction(() => {\r\n\r\n                this.entities[\"delivery\"] = result.data;\r\n                this.deliveriseSum = [0, 0, 0];\r\n                result.data.forEach((i)=>{\r\n                \r\n                    this.deliveriseSum[0] += parseFloat(i.count[\"$numberDecimal\"]);\r\n                    this.deliveriseSum[1] += parseFloat(i.liter[\"$numberDecimal\"]);\r\n                    this.deliveriseSum[2] +=( parseFloat(i.price[\"$numberDecimal\"]) * parseFloat(i.count[\"$numberDecimal\"]));\r\n                })\r\n\r\n            })\r\n        }).catch(this.setError);\r\n    }\r\n    @action setEntityType = (entityName) => {\r\n        this.entityType = entityName;\r\n    }\r\n\r\n    createItem = (entity, entityName) => {\r\n        return axios.post('/api/' + entityName, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[entityName].push(result.data);\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n\r\n\r\n    @action setError = (err) => {\r\n        this.errors = { message: err.response ? err.response.data.message : err.data, stack: err.stack };\r\n    }\r\n    searchDeliveries = (entity) => {\r\n        this.shtraosDeliveries = [];\r\n        this.deliveries = [];\r\n\r\n        axios.post(\"/delivery/search/\" + entity.grouping, entity)\r\n            .then((result) => {\r\n                runInAction(() => { \r\n                    this.shtraosDeliveries = [];\r\n                    if (entity.grouping === \"milkman\") {\r\n                        const arr = [];\r\n                        this.deliveriseSum = [\"-\",0, 0, 0]\r\n                        result.data.forEach(item => {\r\n                            if (item._id.milkman === \"שטראוס\") {\r\n                                if (!item._id.isClose) {\r\n                                    item._id.milkman = \"שטראוס הובלה יצרני חלב רחוק\"\r\n                                }\r\n                                this.shtraosDeliveries.push(item);\r\n                            }\r\n                            else {\r\n                                let items = arr.filter((i) => i._id.milkman === item._id.milkman);\r\n                                if (items.length > 0) {\r\n                                    items[0].totalAmout[\"$numberDecimal\"] = parseFloat(items[0].totalAmout[\"$numberDecimal\"]) +\r\n                                        parseFloat(item.totalAmout[\"$numberDecimal\"]);\r\n\r\n                                    items[0].totalLiter[\"$numberDecimal\"] = parseFloat(items[0].totalLiter[\"$numberDecimal\"]) +\r\n                                        parseFloat(item.totalLiter[\"$numberDecimal\"]);\r\n\r\n                                    items[0].sumPrice[\"$numberDecimal\"] = parseFloat(items[0].sumPrice[\"$numberDecimal\"]) +\r\n                                        parseFloat(item.sumPrice[\"$numberDecimal\"]);\r\n                                }\r\n                                else {\r\n                                    arr.push(item);\r\n\r\n                                }\r\n\r\n                                this.deliveriseSum[1] += parseFloat(item.totalAmout[\"$numberDecimal\"]);\r\n                                this.deliveriseSum[2] += parseFloat(item.totalLiter[\"$numberDecimal\"]);\r\n                                this.deliveriseSum[3] += parseFloat(item.sumPrice[\"$numberDecimal\"]);\r\n                            }\r\n                        });\r\n                        result.data = arr;\r\n                    }\r\n                    else {\r\n                        this.deliveriseSum = [0, 0, 0]\r\n                        result.data.forEach(item => {\r\n                            this.sumColumns[\"manufacturer\"].forEach((key, i) => {\r\n                                    this.deliveriseSum[i] +=item[key]? parseFloat(item[key][\"$numberDecimal\"]):0;\r\n                            });\r\n                        });\r\n                    }\r\n                    this.deliveries = (result.data);\r\n                    this.searchObj = { ...entity };\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n}\r\nconst store = new entitiesStore();\r\nexport default store;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport routes from './routes.js';\r\nimport Master from './components/Master.jsx';\r\nimport {renderRoutes } from 'react-router-config'\r\nimport {BrowserRouter, Route, Link} from 'react-router-dom'\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport userStore from './store/userStore';\r\nimport entitiesStore from './store/entitiesStore';\r\nimport { Provider } from 'mobx-react';\r\n\r\nReactDom.render((\r\n    \r\n  <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n  <BrowserRouter>\r\n  <Provider userStore={userStore} entitiesStore={entitiesStore}>\r\n  <div>\r\n  <Master></Master>\r\n   {routes.childRoutes.map((route) => {\r\n        console.log(route);\r\n        return <Route key={route.path} {...route}/>\r\n    })}  </div></Provider>\r\n    </BrowserRouter></MuiThemeProvider>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
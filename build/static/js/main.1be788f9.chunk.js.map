{"version":3,"sources":["pages/HomePage.jsx","pages/entities/PricesArray.jsx","pages/entities/ManifuctresArray.jsx","pages/entities/CreateEntity.jsx","pages/delivery/DeliveryPage.jsx","pages/entities/AddPopUp.jsx","pages/entities/Entity.jsx","pages/entities/Entities.jsx","components/Login.jsx","pages/LoginPage.jsx","pages/CurrentUser.jsx","pages/delivery/Search.jsx","pages/delivery/delivery.jsx","pages/delivery/DeliveriesPage.jsx","routes.js","components/Master.jsx","serviceWorker.js","store/userStore.js","store/entitiesStore.js","index.js"],"names":["HomePage","inject","observer","react_default","a","createElement","Card","className","React","Component","PricesArray","entityType","this","props","entitiesStore","getItems","_this2","entities","class","map","item","name","TextField_default","type","value","values","onChange","e","changeEntity","target","ManifuctresArray","Checkbox_default","checked","indexOf","CreateEntity","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initializerDefineProperty","_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","togglePopUp","saveEntity","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","entity","editEntity","state","createItem","entityName","stop","getTitle","entitiesFields","prices","types","setState","title","fields","ChangeCheckBox","entities_PricesArray","arrayChange","entities_ManifuctresArray","manArrayChange","floatingLabelText","Save_default","onClick","CancelTwoTone_default","action","_this3","objectSpread","defineProperty","_this4","key","_this5","_this6","concat","filter","i","DeliveryPage","DeliveryPage_descriptor","DeliveryPage_descriptor2","DeliveryPage_descriptor3","DeliveryPage_descriptor4","_descriptor5","editDelivery","createDelivery","setEntity","number","price","liter","count","date","Date","getFullYear","padNumber","getMonth","getDate","userStore","user","FormControl_default","InputLabel_default","htmlFor","Select_default","inputProps","id","MenuItem_default","manufacturer","toDateString","changeDateEntity","onInput","milkman","keys","driver","truck","cerDel","cerSell","Link","to","observable","split","forEach","element","manufacturers","isClose","AddPopUp","getPopUp","showPopUp","delivery_DeliveryPage","entities_CreateEntity","Fab_default","color","aria-label","Add_default","Entity","getItemText","getItemDecimalText","deleteEntity","getItemArrayText","EditTwoTone_default","DeleteTwoTone_default","EntitesPage","match","params","setEntityType","entities_AddPopUp","entities_Entity","Redirect","LoginForm","_ref","onSubmit","errors","summary","errorText","username","password","RaisedButton_default","label","primary","LoginPage","processForm","event","preventDefault","login","changeUser","field","Login","CurrentUser","subtitle","es_Redirect","SearchBar","search","searchDeliveries","grouping","fromDate","InputLabelProps","shrink","toDate","Search_default","getFirstDayOfTheMonth","getLasttDayOfTheMonth","Delivery","getColumnsArray","sumColumns","arr","DeliveriesPage","getSums","deliveriseSum","searchObj","delivery_Search","getTitles","deliveries","delivery","_id","shtraosDeliveries","routes","childRoutes","path","component","Entities","Master","NavLink","getLinks","Boolean","window","location","hostname","store","axios","post","then","setUser","catch","setError","res","data","err","message","response","stack","names","delete","result","runInAction","push","get","items","length","totalAmout","parseFloat","totalLiter","sumPrice","ReactDom","render","MuiThemeProvider_default","muiTheme","getMuiTheme","BrowserRouter","index_module","components_Master","route","console","log","Route","assign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1be788f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'material-ui/Card';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n@inject(\"userStore\")\r\n@observer\r\nclass HomePage extends React.Component {\r\n\r\n  render() {\r\n      return (<Card className=\"container\">\r\n      </Card>)\r\n  }\r\n}\r\nexport default HomePage;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass PricesArray extends React.Component {\r\n      entityType = \"entityType\" \r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(this.entityType);\r\n  }\r\n  render() { \r\n      if (this.props.entitiesStore.entities[this.entityType]){\r\n       return (<div class=\"prices\">    <h4>מחירים</h4> <div className=\"pricesTable\">\r\n       {this.props.entitiesStore.entities[this.entityType] .map((item)=>{\r\n              return <div className=\"row\"><span> {item.name} - </span><TextField className=\"priceInput\"\r\n              type=\"number\" name={item.name}   \r\n              value={this.props.values[item.name]}\r\n               onChange={(e)=>{this.props.changeEntity(item.name , e.target.value)}} />\r\n              \r\n              </div>\r\n          })} </div>\r\n       </div> );\r\n      }\r\n      else{\r\n        return (<div>loading</div>)\r\n      }\r\n    }\r\n}\r\n\r\nexport default PricesArray;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass ManifuctresArray extends React.Component {\r\n      entityType = \"entityType\" \r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(this.entityType);\r\n  }\r\n  render() { \r\n      if (this.props.entitiesStore.entities[this.entityType]){\r\n       return (<div class=\"prices\">    <h4>באיזה מסכים להציגו?</h4> <div className=\"pricesTable\">\r\n       {this.props.entitiesStore.entities[this.entityType] .map((item)=>{\r\n              return <div className=\"row\"><span> {item.name} - </span><Checkbox \r\n              className=\"checkbox\"\r\n              name={item.name}   \r\n              checked={this.props.values.indexOf(item.name) >-1}\r\n              onChange={(e)=>{ this.props.changeEntity(item.name , e.target.checked)}} />\r\n              \r\n              </div>\r\n          })} </div>\r\n       </div> );\r\n      }\r\n      else{\r\n        return (<div>loading</div>)\r\n      }\r\n    }\r\n}\r\n\r\nexport default ManifuctresArray;","import React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject, propTypes} from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelTwoToneIcon from '@material-ui/icons/CancelTwoTone';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PricesArray from './PricesArray';\r\nimport ManifuctresArray from './ManifuctresArray';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass CreateEntity extends React.Component {\r\n \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      entity: props.entity|| {prices:{} , types:[]}\r\n    };\r\n  }\r\n  componentWillReceiveProps(e) {\r\n    this.setState({entity:e.entity||{prices:{} , types:[]}})\r\n  }\r\n  @action changeEntity=(e)=>{\r\n      this.setState({entity : {...this.state.entity , [e.target.name]:  e.target.value}});\r\n      this.state.entity[e.target.name] = e.target.value;\r\n  }\r\n\r\n  @action ChangeCheckBox = (e)=>{\r\n      this.setState({entity : {...this.state.entity , [e.target.name]: !this.state.entity[e.target.name]}});\r\n  }\r\n  @action arrayChange = (key , value)=>{\r\n    // this.state.entity.prices[key]=value;\r\n      this.setState({entity : {...this.state.entity , prices: {...this.state.entity.prices , [key]:value}}});\r\n  }\r\n\r\n  @action manArrayChange = (key,value)=>{\r\n    if (!value){\r\n      this.setState({entity : {...this.state.entity , types: this.state.entity.types.filter((i)=>i!==key)}});\r\n    }\r\n    else if (this.state.entity.types.indexOf(key) < 0){\r\n      this.setState({entity : {...this.state.entity , types: this.state.entity.types.concat(key)}});\r\n      }\r\n  }\r\ntogglePopUp = ()=>{\r\n  this.props.togglePopUp();\r\n}\r\n   saveEntity = async()=>{\r\n     if (this.props.entity){\r\n      await this.props.entitiesStore.editEntity(this.state.entity );\r\n     }\r\n     else{\r\n        await this.props.entitiesStore.createItem(this.state.entity , this.props.entityName);\r\n     }\r\n     this.props.togglePopUp();\r\n    }\r\n  getTitle=()=>{\r\n    if (this.props.entity){\r\nreturn \"ערוך \"  + this.props.entitiesStore.entitiesFields[this.props.entityName].name;\r\n    }\r\nelse return this.props.entitiesStore.entitiesFields[this.props.entityName].name+ \" חדש \";\r\n  }\r\n\r\n  render() { \r\n      return  (<Card className=\"popUp\">\r\n    <CardTitle title={this.getTitle()} />\r\n        {this.props.entitiesStore.entitiesFields[this.props.entityName].fields.map((item)=>{\r\n           if (item === \"isClose\"){\r\n            return ( <div class=\"row\"><span>האם הוא קרוב? </span>\r\n                <Checkbox name={item} onChange={this.ChangeCheckBox} className=\"checkbox\" checked={this.state.entity[item]} value=\"האם הוא קרוב\"/>\r\n          </div>  )\r\n           }\r\n           else  if (item === \"arrPrices\"){\r\n            return (<PricesArray name=\"item\" changeEntity={this.arrayChange} values={this.state.entity.prices||{}} />)\r\n           }\r\n           else  if (item === \"types\"){\r\n            return (<ManifuctresArray name=\"item\" changeEntity={this.manArrayChange} values={this.state.entity.types||[]} />)\r\n           }\r\n           \r\n           else{\r\n           return (<div className=\"row\">  <TextField\r\n            floatingLabelText={item} type=\"text\" name={item}   \r\n            value={this.state.entity[item]||\"\"} onChange={this.changeEntity} /></div>)\r\n        }\r\n      })}\r\n        <div className=\"row\"> \r\n         <SaveIcon className=\"buttons\" onClick={this.saveEntity} />\r\n         <CancelTwoToneIcon  className=\"buttons\" onClick={this.togglePopUp}/>\r\n         </div>\r\n      </Card>)  \r\n  }\r\n}\r\n\r\nexport default CreateEntity;","import React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelTwoToneIcon from '@material-ui/icons/CancelTwoTone';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {  Link , NavLink} from 'react-router-dom';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n@inject(\"entitiesStore\") \r\n@inject(\"userStore\") \r\n@observer\r\nclass DeliveryPage extends React.Component {\r\n \r\n  @observable entity = {entityType:\"חלב\",liter:1 , count:1 , date:new Date()};\r\n   \r\n  padNumber(number){\r\n    return number>9 ? number : \"0\"+number;\r\n  }\r\n    \r\n  @action changeDateEntity=(e)=>{\r\n    const values = e.target.value.split(\"-\");\r\n    this.entity[e.target.name] = new Date( values[0] , values[1],values[2]);\r\n    \r\n  }\r\n\r\n  @action changeEntity=(e)=>{\r\n    this.entity[e.target.name] = e.target.value;\r\n    if (e.target.name===\"milkman\" || e.target.name === \"entityType\"){\r\n         this.props.entitiesStore.entities.milkman.forEach(element => {\r\n            if (element.name === e.target.value)\r\n                this.entity.price = element.prices[this.entity.entityType];\r\n        });\r\n    }\r\n    if (e.target.name === \"manufacturer\"){\r\n      this.props.entitiesStore.entities.manufacturers.forEach(element => {\r\n        if (element.name === e.target.value)\r\n            this.entity.isClose = element.isClose;\r\n    });\r\n    }\r\n  }\r\n\r\n  @action ChangeCheckBox = (e)=>{\r\n    this.entity[e.target.name] = !this.entity[e.target.name];\r\n  }\r\n  @action arrayChange = (key , value)=>{\r\n    // this.entity.prices[key]=value;\r\n    this.entity.prices = {...this.entity.prices , [key]:value};\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(\"entityType\");\r\n    this.props.entitiesStore.getItems(\"driver\");\r\n    this.props.entitiesStore.getItems(\"truck\");\r\n    this.props.entitiesStore.getItems(\"manufacturers\");\r\n    this.props.entitiesStore.getItems(\"milkman\");\r\n  }\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.setEntity(props)\r\n\r\n  }\r\n  setEntity(props){\r\n    if( props.entity){\r\n      this. entity  =  {...props.entity}\r\n       this.entity.price = this.entity.price[\"$numberDecimal\"];\r\n       this.entity.liter = this.entity.liter[\"$numberDecimal\"];\r\n       this.entity.count = this.entity.count[\"$numberDecimal\"];\r\n    }\r\n    else{ \r\n      this.entity =  {entityType:\"חלב\",liter:1 , count:1 , date:new Date()}\r\n    }\r\n  }\r\n  componentWillReceiveProps(props) {\r\n   this.setEntity(props)\r\n}\r\n   saveEntity = async()=>{\r\n    if (this.props.entity){\r\n      await this.props.entitiesStore.editDelivery(this.entity );\r\n     }\r\n     else{\r\n        await this.props.entitiesStore.createDelivery(this.entity , this.props.entityName);\r\n      }\r\n       this.props.togglePopUp();\r\n\r\n    }\r\n    togglePopUp = ()=>{\r\n      this.props.togglePopUp();\r\n    }\r\n    \r\n  toDateString(date){\r\n    if (!date.getFullYear){\r\n      date = new Date(date);\r\n    }\r\n    if (date.getFullYear)\r\n    return date.getFullYear() + \"-\" + this.padNumber(date.getMonth() + 1) + \"-\"+this.padNumber(date.getDate());\r\n    else{\r\n      return date;\r\n    }\r\n  }\r\n  render() { \r\n    if(this.props.userStore.user) {\r\n        return  (<Card className=\"popUp\">\r\n    <CardTitle title=\"משלוח חדש\"/>\r\n    <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"entityType\">מוצר</InputLabel>\r\n          <Select className=\"select\"\r\n            value={this.entity.entityType}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'entityType',\r\n              id: 'entityType',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"entityType\"] ? this.props.entitiesStore.entities[\"entityType\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl >\r\n          <InputLabel htmlFor=\"manufacturer\">יצרן</InputLabel>\r\n          <Select className=\"select\"\r\n            value={this.entity.manufacturer}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'manufacturer',\r\n              id: 'manufacturer',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"manufacturers\"] ? this.props.entitiesStore.entities[\"manufacturers\"] .map(item=>  {\r\n                if (item.types.indexOf(this.entity.entityType) >= 0  )\r\n                return ( <MenuItem value={item.name}><em>{item.name}</em></MenuItem> )\r\n            }): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n\r\n          <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"liter\">ליטר</InputLabel>\r\n          <TextField id=\"liter\" className=\"input\"\r\n            floatingLabelText=\"ליטר\" type=\"number\" name=\"liter\"   \r\n            value={this.entity.liter} onChange={this.changeEntity} />\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"count\">כמות</InputLabel>\r\n          <TextField id=\"count\" className=\"input\"\r\n            floatingLabelText=\"כמות\" type=\"number\" name=\"count\"   \r\n            value={this.entity.count} onChange={this.changeEntity} />\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl className=\"row\">\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"date\"   \r\n            value={this.toDateString(this.entity.date)} onChange={this.changeDateEntity}  onInput={this.changeDateEntity} />\r\n        </FormControl>\r\n\r\n          </div><div className=\"row\"> \r\n        <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"milkman\">מחלבה</InputLabel>\r\n          <Select className=\"select\"\r\n            value={this.entity.milkman}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'milkman',\r\n              id: 'milkman',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"milkman\"] ? this.props.entitiesStore.entities[\"milkman\"] .map(item=>  {\r\n                if(Object.keys(item.prices).indexOf(this.entity.entityType) >= 0 )\r\n                return ( <MenuItem value={item.name}><em>{item.name}</em></MenuItem> )\r\n            }): null \r\n            }\r\n          </Select>\r\n        </FormControl>  </div><div className=\"row\">\r\n        \r\n        <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"price\">מחיר</InputLabel>\r\n          <TextField id=\"price\" className=\"input\"\r\n             type=\"text\" name=\"price\"   \r\n            value={this.entity.price} onChange={this.changeEntity} />\r\n        </FormControl>  </div><div className=\"row\">\r\n        <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"driver\">נהג</InputLabel>\r\n          <Select className=\"select\"\r\n            value={this.entity.driver}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'driver',\r\n              id: 'driver',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"driver\"] ? this.props.entitiesStore.entities[\"driver\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n        <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"truck\">משאית</InputLabel>\r\n          <Select className=\"select\"\r\n            value={this.entity.truck}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'truck',\r\n              id: 'truck',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"truck\"] ? this.props.entitiesStore.entities[\"truck\"] .map(item=>  <MenuItem value={item.number}><em>{item.number}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n        \r\n        <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"cerDel\">תעודת משלוח</InputLabel>\r\n          <TextField id=\"cerDel\" className=\"input\"\r\n             type=\"text\" name=\"cerDel\"   \r\n            value={this.entity.cerDel} onChange={this.changeEntity} />\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n        \r\n        <FormControl className=\"row\">\r\n          <InputLabel htmlFor=\"cerSell\">תעודת מכירה </InputLabel>\r\n          <TextField id=\"cerSell\" className=\"input\"\r\n             type=\"text\" name=\"cerSell\"   \r\n            value={this.entity.cerSell} onChange={this.changeEntity} />\r\n        </FormControl>\r\n        \r\n</div>\r\n        <div className=\"row\"> \r\n         <SaveIcon className=\"buttons\" onClick={this.saveEntity} />\r\n         <CancelTwoToneIcon  className=\"buttons\" onClick={this.togglePopUp}/>\r\n         </div>\r\n      </Card>)  \r\n      } else{\r\n        return (<Link to=\"/login\">Log in</Link>)\r\n      }\r\n  }\r\n}\r\n\r\nexport default DeliveryPage;","import React  from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {observer} from 'mobx-react';\r\nimport {observable , action } from 'mobx';\r\nimport CreateEntity from './CreateEntity';\r\nimport DeliveryPage from '../delivery/DeliveryPage';\r\n\r\n@observer\r\nclass AddPopUp extends React.Component {\r\n    @observable showPopUp = false;\r\n    @action togglePopUp=()=>{debugger;\r\n        this.showPopUp = !this.showPopUp; \r\n    }\r\n    getPopUp=()=>{\r\n      if (this.props.entity ||this.showPopUp )\r\n        {\r\n          if (this.props.entityName === \"delivery\"){\r\n              return (<DeliveryPage entity={this.props.entity} togglePopUp={this.props.entity?this.props.togglePopUp : this.togglePopUp} />)\r\n          }\r\n          else return  ( <CreateEntity entity={this.props.entity} togglePopUp={this.props.entity?this.props.togglePopUp : this.togglePopUp} entityName={this.props.entityName}></CreateEntity> );\r\n        }\r\n    }\r\n  render() {\r\n       return (<div className=\"popUpContainer\">  <Fab color=\"primary\" aria-label=\"Add\" >\r\n       <AddIcon onClick={this.togglePopUp} />\r\n       {this.getPopUp()}\r\n     </Fab>\r\n     </div> )\r\n  }\r\n}\r\n\r\nexport default AddPopUp;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport EditTwoTone from '@material-ui/icons/EditTwoTone';\r\nimport DeleteToneIcon from '@material-ui/icons/DeleteTwoTone';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass Entity extends React.Component {\r\n        \r\n  getItemText = (value)=>{\r\n    return (<div className=\"column\">{Object.keys(value).map((key)=>{\r\n      return <div className=\"column1\"> {value[key]} - {key}</div>\r\n    })}</div>);\r\n  }\r\n      \r\n  getItemDecimalText = (value,key)=>{ \r\n    if (key === \"date\"){\r\n      return new Date(value).toDateString();\r\n    }\r\n    return (value[\"$numberDecimal\"]?value[\"$numberDecimal\"]:value);\r\n  }\r\n\r\n  editEntity = ()=>{\r\n    this.props.editEntity(this.props.item);\r\n  }\r\n  \r\n  deleteEntity = ()=>{\r\n    this.props.entitiesStore.deleteEntity(this.props.item);\r\n  }\r\n  \r\n  getItemArrayText = (value)=>{\r\n    return  value.map((key)=>{\r\n      return <div className=\"column1\"> {key}</div>\r\n\r\n    })\r\n  }\r\n  render() {\r\n     \r\n         return (<div className=\"row\">\r\n         <div className=\"column buttons\">\r\n          <EditTwoTone  className=\"buttons\" onClick={this.editEntity}/>\r\n          <DeleteToneIcon  className=\"buttons\" onClick={this.deleteEntity}/>\r\n         </div>\r\n         {Object.keys(this.props.item).map((key)=>{\r\n           if (key[0] != \"_\" && key!=\"prices\" && key != \"types\")\r\n             return <div className={key + \" column\"}>{key===\"isClose\" ?(this.props.item[key]?\"קרוב\": \"רחוק\"): this.getItemDecimalText(this.props.item[key] , key)}</div>\r\n         })}\r\n         {this.props.item.prices?  this.getItemText(this.props.item[\"prices\"]) : null}\r\n         {this.props.item.types?  this.getItemArrayText(this.props.item[\"types\"]) : null}\r\n         </div>) \r\n       \r\n  }\r\n}\r\n\r\nexport default Entity;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\nimport AddPopUp from './AddPopUp';\r\nimport Entity from './Entity';\r\nimport {observable} from \"mobx\"\r\n@inject(\"userStore\") \r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass EntitesPage extends React.Component {\r\n       @observable entity=null;\r\n  componentWillReceiveProps(e) {\r\n    this.props.entitiesStore.getItems(e.match.params.name);\r\n    this.props.entitiesStore.setEntityType(e.match.params.name);\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(this.props.match.params.name);\r\n    this.props.entitiesStore.setEntityType(this.props.match.params.name);\r\n  }\r\n  getItemText = (value)=>{\r\n    return Object.keys(value).map((key)=>{\r\n      return <div className=\"column1\"> {value[key]} - {key}</div>\r\n\r\n    })\r\n  }\r\n  editEntity=(entity)=>{\r\n    this.entity = entity;\r\n  }\r\n  render() {\r\n    if (this.props.userStore.user){\r\n      if (this.props.entitiesStore.entities[this.props.entitiesStore.entityType]){\r\n       return (<div class=\"container\">\r\n    <h2 className=\"title\" >{this.props.entitiesStore.entitiesFields[this.props.entitiesStore.entityType].name+ \" חדש \"} </h2>\r\n        <AddPopUp togglePopUp={this.editEntity} entityName={this.props.entitiesStore.entityType} entity={this.entity}></AddPopUp> <div className=\"table\">\r\n       {this.props.entitiesStore.entities[this.props.entitiesStore.entityType].map((item)=>{\r\n        \r\n         return (<Entity item={item} editEntity={this.editEntity}/>)\r\n       })}\r\n       </div></div>)\r\n      }\r\n      else{\r\n        return (<div>loading</div>)\r\n      }\r\n    }\r\n    else{\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default EntitesPage;","import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardText } from 'material-ui/Card';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n\r\nconst LoginForm = ({\r\n  onSubmit,\r\n  onChange,\r\n  errors,\r\n  user\r\n}) => (\r\n  <Card className=\"container\">\r\n    <form action=\"/\" onSubmit={onSubmit}>\r\n      <h2 className=\"card-heading\">Login</h2>\r\n\r\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\r\n\r\n      <div className=\"field-line\">\r\n        <TextField\r\n          floatingLabelText=\"User Name\"\r\n          name=\"username\"\r\n          errorText={errors.username}\r\n          onChange={onChange}\r\n          value={user.username}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"field-line\">\r\n        <TextField\r\n          floatingLabelText=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={onChange}\r\n          errorText={errors.password}\r\n          value={user.password}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"button-line\">\r\n        <RaisedButton type=\"submit\" label=\"Log in\" primary />\r\n      </div>\r\n\r\n    </form>\r\n  </Card>\r\n);\r\n\r\n\r\nexport default LoginForm;","import React  from 'react';\r\nimport LoginForm from '../components/Login.jsx';\r\nimport axios from 'axios';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\n@inject(\"userStore\") \r\n@observer\r\nclass LoginPage extends React.Component {\r\n   \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      user: {\r\n        username: '',\r\n        password: ''\r\n      }\r\n    };\r\n  }\r\n \r\n   processForm = (event)=> {\r\n    event.preventDefault();\r\n    this.props.userStore.login(this.state.user);\r\n  }\r\n  \r\n  changeUser=(event) =>{\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({user\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render the component.\r\n   */\r\n  render() {\r\n       if (!this.props.userStore.user){\r\n\r\n    return (\r\n      <LoginForm\r\n        onSubmit={this.processForm}\r\n        onChange={this.changeUser}\r\n        errors={this.props.userStore.errors}\r\n        user={this.state.user}\r\n      />\r\n    );\r\n       }\r\n       else{\r\n                 return <Redirect to=\"/profile\"/>;\r\n       }\r\n  }\r\n\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject} from 'mobx-react';\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\n@inject(\"userStore\") \r\n@observer\r\nclass CurrentUser extends React.Component {\r\n\r\n  render() { \r\n    if(this.props.userStore.user) {\r\n      return  (<Card className=\"container\">\r\n    <CardTitle title=\"גולן\" subtitle={\" שלום \" + this.props.userStore.user.username} />\r\n      </Card>) \r\n    }\r\n    else{\r\n      return (<Redirect to=\"/login\"></Redirect>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default CurrentUser;","\r\nimport React from 'react';\r\nimport { Card, CardTitle } from 'material-ui/Card';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport TextField from 'material-ui/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass SearchBar extends React.Component {\r\n \r\n  getFirstDayOfTheMonth(){\r\n    var date = new Date();\r\nreturn new Date(date.getFullYear(), date.getMonth(), 1);}\r\n\r\ngetLasttDayOfTheMonth(){\r\n  var date = new Date();\r\nreturn new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n  @observable entity = {fromDate:this.getFirstDayOfTheMonth(),\r\n     toDate:this.getLasttDayOfTheMonth()\r\n    ,grouping:\"milkman\" , entityType:\"חלב\" };\r\n   \r\n    \r\n   \r\n    @action changeEntity=(e)=>{\r\n      this.entity[e.target.name] = e.target.value;\r\n      \r\n    } \r\n    @action changeDateEntity=(e)=>{\r\n      const values = e.target.value.split(\"-\");\r\n      this.entity[e.target.name] = new Date( values[0] , values[1],values[2]);\r\n      \r\n    }\r\n\r\n  search = ()=>{\r\n    this.props.entitiesStore.searchDeliveries(this.entity);\r\n  }\r\n  componentDidMount() {\r\n    this.props.entitiesStore.getItems(\"entityType\"); \r\n  } \r\n  padNumber(number){\r\n    return number>9 ? number : \"0\"+number;\r\n  }\r\n  toDateString(date){\r\n    return date.getFullYear() + \"-\" + this.padNumber(date.getMonth() + 1) + \"-\"+this.padNumber(date.getDate());\r\n  }\r\n  render() {  \r\n        return  (<Card className=\"popUp\">\r\n    <CardTitle title=\"דוחות\"/>\r\n    <div  className=\"row\">\r\n            <FormControl>\r\n          <InputLabel htmlFor=\"age-simple\">מוצר</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.entityType}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'entityType',\r\n              id: 'age-simple',\r\n            }} > \r\n            {this.props.entitiesStore.entities[\"entityType\"] ? this.props.entitiesStore.entities[\"entityType\"] .map(item=>  <MenuItem value={item.name}><em>{item.name}</em></MenuItem>): null}\r\n          </Select>\r\n        </FormControl>\r\n        </div><div className=\"row\">\r\n          <FormControl >\r\n          <InputLabel htmlFor=\"mani-simple\">דוח עבור</InputLabel>\r\n          <Select className=\"input\"\r\n            value={this.entity.grouping}\r\n            onChange={this.changeEntity}\r\n            inputProps={{\r\n              name: 'grouping',\r\n              id: 'mani-simple',\r\n            }} > \r\n                {/* <MenuItem value=\"_id\"><em>הצג את כל ההעברות</em></MenuItem>  */}\r\n                <MenuItem value=\"milkman\"><em>חלבנים</em></MenuItem> \r\n                <MenuItem value=\"manufacturer\"><em>יצרנים</em></MenuItem> \r\n          </Select>\r\n        </FormControl>\r\n        </div> <div className=\"row\"> \r\n        <span htmlFor=\"mani-simple\">מתאריך</span>\r\n          <FormControl className=\"row\">\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"fromDate\"   \r\n             value={this.toDateString(this.entity.fromDate)} onChange={this.changeDateEntity} />\r\n        </FormControl>\r\n </div><div className=\"row\"> \r\n          <span htmlFor=\"toDate\">עד תאריך</span>\r\n          <TextField className=\"input\"\r\n             type=\"date\" name=\"toDate\"   InputLabelProps={{\r\n              shrink: true,\r\n            }}  label=\"עד תאריך\" \r\n            value={this.toDateString(this.entity.toDate)} onChange={this.changeDateEntity} />\r\n </div> \r\n        <div className=\"row\"> \r\n         <SearchIcon className=\"buttons\" onClick={this.search} />\r\n         </div>\r\n      </Card>)  \r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport EditTwoTone from '@material-ui/icons/EditTwoTone';\r\nimport DeleteToneIcon from '@material-ui/icons/DeleteTwoTone';\r\n\r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass Delivery extends React.Component {\r\n        \r\n  getItemText = (key)=>{if (this.props.item[key])\r\n    return (this.props.item[key][\"$numberDecimal\"]?this.props.item[key][\"$numberDecimal\"]:this.props.item[key]);\r\n  }\r\n\r\n  editEntity = ()=>{\r\n    this.props.editEntity(this.props.item);\r\n  }\r\n  \r\n  deleteEntity = ()=>{\r\n    this.props.entitiesStore.deleteEntity(this.props.item);\r\n  }\r\n  getColumnsArray=()=>{\r\n    return this.props.entitiesStore.sumColumns[this.props.grouping]; \r\n  }\r\n   \r\n  render() {\r\n     const arr = this.getColumnsArray();\r\n         return (<div className=\"row\">\r\n\r\n         {this.props.grouping === \"_id\" ? <div className=\"column buttons\">\r\n          <EditTwoTone  className=\"buttons\" onClick={this.editEntity}/>\r\n          <DeleteToneIcon  className=\"buttons\" onClick={this.deleteEntity}/>\r\n         </div>:<div className=\"column\">-</div>}\r\n         <div className=\"name column\"> {this.props.item[\"_id\"][this.props.grouping]}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[0])}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[1])}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[2])}</div>\r\n         <div className=\"column\"> {this.getItemText(arr[3])}</div>\r\n         </div>) \r\n       \r\n  }\r\n}\r\n\r\nexport default Delivery;","import React  from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport { Redirect } from 'react-router'\r\nimport {observable} from \"mobx\"\r\nimport DeliveryPage from './DeliveryPage';\r\nimport SearchBar from './Search';\r\nimport Delivery from './delivery';\r\n@inject(\"userStore\") \r\n@inject(\"entitiesStore\") \r\n@observer\r\nclass DeliveriesPage extends React.Component {\r\n       @observable entity=null; \r\n  \r\n  editEntity=(entity)=>{\r\n    this.entity = entity;\r\n  }\r\n  getTitles(){\r\n    if(this.props.entitiesStore.searchObj.grouping === \"manufacturer\"){\r\nreturn ( <div className=\"row\"> <div className=\"column\">-</div> <div className=\"column\">-</div>\r\n<div className=\"column\">יצור חלב</div>\r\n<div className=\"column\">שטראוס</div>\r\n<div className=\"column\">שטראוס רחוקים</div></div>)\r\n    }\r\n    else{\r\n      return ( <div className=\"row\"> <div className=\"column\">-</div> <div className=\"column\">-</div>\r\n      <div className=\"column\">מחיר ליחידה</div>\r\n      <div className=\"column\">סכה כמות</div>\r\n      <div className=\"column\">סכה ליטר</div>\r\n      <div className=\"column\">סהכ מחיר</div></div>)\r\n    }\r\n  }\r\n\r\n  getSums = ()=>{ \r\n      return ( <div className=\"row\"> <div className=\"column\">-</div> <div className=\"column\">-</div><div className=\"column\">-</div>\r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[0]}</div>\r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[1]}</div>\r\n      <div className=\"column\">{this.props.entitiesStore.deliveriseSum[2] + \"ש\\\"ח\"}</div> </div>)\r\n  }\r\n  render() {\r\n    if (this.props.userStore.user){ \r\n       return (<div class=\"container\">\r\n        {this.entity ? <DeliveryPage togglePopUp={this.editEntity} entityName={this.props.entitiesStore.entityType} entity={this.entity}></DeliveryPage>:null}\r\n         <SearchBar></SearchBar>\r\n         <div className=\"table\">\r\n        {this.getTitles()}\r\n       {this.props.entitiesStore.deliveries?this.props.entitiesStore.deliveries.map((item)=>{\r\n         return (<Delivery grouping={this.props.entitiesStore.searchObj.grouping} key={item._id} item={item} editEntity={this.editEntity}/>)\r\n       }) : <div>Loading</div>}\r\n       {<div className=\"row\">סך הכל</div>}\r\n       {this.props.entitiesStore.deliveries?this.getSums() : null}\r\n       {this.props.entitiesStore.shtraosDeliveries?<div className=\"row\">שטראוס</div>:null}\r\n       \r\n       {this.props.entitiesStore.shtraosDeliveries?this.props.entitiesStore.shtraosDeliveries.map((item)=>{\r\n         return (<Delivery grouping={this.props.entitiesStore.searchObj.grouping} key={item._id} item={item} editEntity={this.editEntity}/>)\r\n       }) : null}\r\n       </div></div>)\r\n    }\r\n    else{\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DeliveriesPage;","import HomePage from './pages/HomePage.jsx';\r\nimport Entities from './pages/entities/Entities';\r\nimport LoginPage from './pages/LoginPage.jsx';\r\nimport CurrentUser from './pages/CurrentUser.jsx';\r\n// import Registration from './pages/RegistrationPage.jsx';\r\nimport DeliveryPage from './pages/delivery/DeliveryPage.jsx';\r\nimport DeliverisesPage from './pages/delivery/DeliveriesPage';\r\n\r\n\r\nconst routes = {\r\n  // base component (wrapper for the whole application).\r\n  childRoutes: [\r\n\r\n    {\r\n      path: '/',\r\n      component: HomePage\r\n    },\r\n\r\n    {\r\n      path: '/login',\r\n      component: LoginPage\r\n    },\r\n\r\n    // {\r\n    //   path: '/registration',\r\n    //   component: Registration\r\n    // },\r\n\r\n    {\r\n      path : '/profile',\r\n      component: CurrentUser\r\n      },\r\n      {\r\n      path : '/delivery',\r\n      component: DeliveryPage\r\n      },\r\n      {\r\n      path : '/deliveries',\r\n      component: DeliverisesPage\r\n      },\r\n\r\n    {\r\n    path : '/entities/:name',\r\n    component: Entities\r\n    }\r\n  ]\r\n};\r\n\r\nexport default routes;","import React from 'react';\r\nimport {  Link , NavLink} from 'react-router-dom';\r\n\r\nimport {observer, inject} from 'mobx-react';\r\n\r\n\r\n@inject(\"userStore\") \r\n@observer\r\nclass Master  extends React.Component{\r\n\r\n  getLinks(){\r\n    if(this.props.userStore.user) {\r\n      return(<div>\r\n        <Link to=\"/deliveries\" className=\"delivery\">משלוחים</Link>\r\n        <Link to=\"/entities/delivery\" className=\"delivery\">הוסף משלוח</Link>\r\n        <Link to=\"/entities/driver\">נהגים</Link>\r\n      <Link to=\"/entities/truck\">משאיות</Link>\r\n      <Link to=\"/entities/milkman\">חלבנים</Link>\r\n      <Link to=\"/entities/manufacturers\">יצרנים</Link>\r\n      <Link to=\"/entities/entityType\">מוצרים</Link> </div>\r\n      );\r\n    } else{\r\n      return (<Link to=\"/login\">Log in</Link>)\r\n    }\r\n\r\n  }\r\n\r\n  render ( )   {\r\n  return <div>\r\n    <div className=\"top-bar\">\r\n      <div className=\"top-bar-left\">\r\n        <NavLink to=\"/profile\">Golan App</NavLink>\r\n      </div>\r\n\r\n      <div className=\"top-bar-right\"> \r\n      {this.getLinks()}\r\n      </div>\r\n\r\n    </div>\r\n \r\n\r\n  </div>\r\n};\r\n}\r\n \r\n\r\nexport default Master;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, computed, action, decorate } from \"mobx\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass userStore {\r\n    @observable user = null;\r\n    @observable errors = {};\r\n\r\n    login = (user) => {\r\n        axios.post('/auth/login', user)\r\n            .then(this.setUser).catch(this.setError);\r\n    }\r\n    @action setUser = (res)=> {\r\n        this.errors = {};\r\n        this.user = res.data;\r\n    }\r\n\r\n    @action setError = (err) => {\r\n        this.errors = { message: err.response ? err.response.data.message : err.data, stack: err.stack };\r\n    }\r\n\r\n}\r\n\r\nconst store = new userStore();\r\nexport default store;","import { observable, runInAction, action, computed } from \"mobx\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass entitiesStore {\r\n    @observable entities = {};\r\n    @observable deliveries = [];\r\n    @observable errors = {};\r\n    @observable searchObj = {};\r\n    entitiesFields = {\r\n        driver: { name: \"נהג\", names: \"נהגים\", fields: [\"name\", \"number\"] },\r\n        truck: { name: \"משאית\", names: \"משאיות\", fields: [\"number\"] },\r\n        milkman: { name: \"חלבן\", names: \"חלבנים\", fields: [\"name\", \"arrPrices\"] },\r\n        entityType: { name: \"מוצר\", names: \"מוצרים\", fields: [\"name\"] },\r\n        manufacturers: { name: \"יצרן\", names: \"יצרנים\", fields: [\"name\", \"isClose\", \"types\"] },\r\n        delivery: {\r\n            name: \"משלוח\", names: \"משלוחים\", fields: [\"cerDel\", \"cerSell\", \"count\",\r\n                \"date\", \"driver\", \"entityType\", \"liter\", \"manufacturer\", \"isClose\", \"milkman\", \"price\", \"truck\", \"_id\"]\r\n        }\r\n    }\r\n    @observable deliveriseSum = {};\r\n    @observable shtraosDeliveries = [];\r\n    @observable entityType = \"\";\r\n    sumColumns = {\r\n        manufacturer: [\"totalAmout\", \"shtrue\", \"shfalse\"],\r\n        milkman: [\"price\", \"totalAmout\", \"totalLiter\", \"sumPrice\"]\r\n    };\r\n\r\n    deleteEntity = (entity) => {\r\n        axios.delete('/api/' + this.entityType + \"/\" + entity._id)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[this.entityType] = this.entities[this.entityType].filter((item) => item._id != entity._id)\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n    editDelivery = (entity) => {\r\n\r\n        axios.post(\"/delivery/\" + entity._id, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[\"delivery\"] = this.entities[\"delivery\"]\r\n                        .map((item) => item._id === entity._id ? result.data : item);\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n    createDelivery = (entity) => {\r\n\r\n        axios.post(\"/delivery/\", entity)\r\n            .then((result) => {\r\n                this.entities[\"delivery\"].push(result.data)\r\n            }).catch(this.setError);\r\n    }\r\n    editEntity = (entity) => {\r\n        axios.post('/api/' + this.entityType + \"/\" + entity._id, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[this.entityType] = this.entities[this.entityType]\r\n                        .map((item) => item._id === entity._id ? result.data : item);\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n    getItems = (entityName) => {\r\n\r\n        axios.get('/api/' + entityName)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[entityName] = result.data;\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n\r\n    @action setEntityType = (entityName) => {\r\n        this.entityType = entityName;\r\n    }\r\n\r\n    createItem = (entity, entityName) => {\r\n        return axios.post('/api/' + entityName, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.entities[entityName].push(result.data);\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n\r\n\r\n    @action setError = (err) => {\r\n        this.errors = { message: err.response ? err.response.data.message : err.data, stack: err.stack };\r\n    }\r\n    searchDeliveries = (entity) => {\r\n\r\n        axios.post(\"/delivery/search/\" + entity.grouping, entity)\r\n            .then((result) => {\r\n                runInAction(() => {\r\n                    this.props.entitiesStore.shtraosDeliveries = [];\r\n                    if (entity.grouping === \"milkman\") {\r\n                        const arr = [];\r\n                        this.shtraosDeliveries = [];\r\n                        this.deliveriseSum = [0, 0, 0]\r\n                        result.data.forEach(item => {\r\n                            if (item._id.milkman === \"שטראוס\") {\r\n                                if (!item._id.isClose) {\r\n                                    item._id.milkman = \"שטראוס הובלה יצרני חלב רחוק\"\r\n                                }\r\n                                this.shtraosDeliveries.push(item);\r\n                            }\r\n                            else {\r\n                                let items = arr.filter((i) => i._id.milkman === item._id.milkman);\r\n                                if (items.length > 0) {\r\n                                    items[0].totalAmout[\"$numberDecimal\"] = parseFloat(items[0].totalAmout[\"$numberDecimal\"]) +\r\n                                        parseFloat(item.totalAmout[\"$numberDecimal\"]);\r\n\r\n                                    items[0].totalLiter[\"$numberDecimal\"] = parseFloat(items[0].totalLiter[\"$numberDecimal\"]) +\r\n                                        parseFloat(item.totalLiter[\"$numberDecimal\"]);\r\n\r\n                                    items[0].sumPrice[\"$numberDecimal\"] = parseFloat(items[0].sumPrice[\"$numberDecimal\"]) +\r\n                                        parseFloat(item.sumPrice[\"$numberDecimal\"]);\r\n                                }\r\n                                else {\r\n                                    arr.push(item);\r\n\r\n                                }\r\n\r\n                                this.deliveriseSum[0] += parseFloat(item.totalAmout[\"$numberDecimal\"]);\r\n                                this.deliveriseSum[1] += parseFloat(item.totalLiter[\"$numberDecimal\"]);\r\n                                this.deliveriseSum[2] += parseFloat(item.sumPrice[\"$numberDecimal\"]);\r\n                            }\r\n                        });\r\n                        result.data = arr;\r\n                    }\r\n                    else {\r\n                        this.deliveriseSum = [0, 0, 0]\r\n                        result.data.forEach(item => {\r\n                            this.sumColumns[\"manufacturer\"].forEach((key, i) => {\r\n                                    this.deliveriseSum[i] +=item[key]? parseFloat(item[key][\"$numberDecimal\"]):0;\r\n                            });\r\n                        });\r\n                    }\r\n                    this.deliveries = (result.data);\r\n                    this.searchObj = { ...entity };\r\n                })\r\n            }).catch(this.setError);\r\n    }\r\n}\r\nconst store = new entitiesStore();\r\nexport default store;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport routes from './routes.js';\nimport Master from './components/Master.jsx';\nimport {renderRoutes } from 'react-router-config'\nimport {BrowserRouter, Route, Link} from 'react-router-dom'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport * as serviceWorker from './serviceWorker';\nimport userStore from './store/userStore';\nimport entitiesStore from './store/entitiesStore';\nimport { Provider } from 'mobx-react';\n\nReactDom.render((\n    \n  <MuiThemeProvider muiTheme={getMuiTheme()}>\n  <BrowserRouter>\n  <Provider userStore={userStore} entitiesStore={entitiesStore}>\n  <div>\n  <Master></Master>\n   {routes.childRoutes.map((route) => {\n        console.log(route);\n        return <Route key={route.path} {...route}/>\n    })}  </div></Provider>\n    </BrowserRouter></MuiThemeProvider>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}